# Dependency helper for when it's needed
include(CMakeFindDependencyMacro)

# Find available Components
file(GLOB __@PROJECT_NAMESPACE_UC@_AVAILABLE_COMPONENTS
    RELATIVE "${CMAKE_CURRENT_LIST_DIR}"
    "${CMAKE_CURRENT_LIST_DIR}/*/@PROJECT_NAMESPACE@*Config.cmake"
)

# Report available Components
message(STATUS "[@PROJECT_NAME@] Available Components:")
foreach(component_config ${__@PROJECT_NAMESPACE_UC@_AVAILABLE_COMPONENTS})
    message(STATUS "- ${component_config}")
endforeach()

# Components were requested
if(@PROJECT_NAMESPACE@_FIND_COMPONENTS)
    message(STATUS "[@PROJECT_NAMESPACE@] Components were requested.")

    # Check for and add each request
    foreach(req_component ${@PROJECT_NAMESPACE@_FIND_COMPONENTS})
        set(req_component_config ${req_component}/@PROJECT_NAMESPACE@${req_component}Config.cmake)

        if (";${__@PROJECT_NAMESPACE_UC@_AVAILABLE_COMPONENTS};" MATCHES ";${req_component_config};")
            message(STATUS "[@PROJECT_NAME@] Including matched component: ${req_component}.")
            set(@PROJECT_NAMESPACE@_${req_component}_FOUND True) 
            include("${CMAKE_CURRENT_LIST_DIR}/${req_component_config}")
        elseif()
            message(STATUS "[@PROJECT_NAME@] Unavailable component: ${req_component}"
            set(@PROJECT_NAMESPACE@_${req_component}_FOUND False) 
        
            if(@PROJECT_NAMESPACE@_FIND_REQUIRED_${req_component}})
                set(@PROJECT_NAMESPACE@_FOUND False)
                set(@PROJECT_NAMESPACE@_NOT_FOUND_MESSAGE "Missing component: ${req_component}")
            endif()
        endif()
    endforeach()
else() # Components were not requested
    message(STATUS "[Qx] No components were requested. Importing all available.")

    # Add all components
    foreach(component_config ${__@PROJECT_NAMESPACE_UC@_AVAILABLE_COMPONENTS})
        message(STATUS "[@PROJECT_NAMESPACE@] Including available component: ${component_config}.")
        include("${CMAKE_CURRENT_LIST_DIR}/${component_config}")
    endforeach()
endif()
